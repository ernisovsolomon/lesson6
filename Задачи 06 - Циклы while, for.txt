Задачи на уроке

1) Напишите программу, которая считает сумму чисел от 1 до 10 включительно.
2) Напишите программу, которая выводит все четные числа от 2 до 20 включительно.
3) Напишите программу, которая выводит таблицу умножения на 5.
4) Напишите программу, которая выводит элементы списка в обратном порядке без
использования встроенных методов.
5) Напишите программу, которая считает количество гласных букв в данной строке.
6) Написать программу для выбора и оплаты кофе. (Условие для этой задачи можно
внести от себя).
7) Задание «Список гостей»
Описание:
	1. Если бы вы могли пригласить кого угодно на обед, то кого бы вы пригласили?
Создайте файл my_guests.py и в нем:
	a. Создайте список, включающий минимум трех людей, которых вам
хотелось бы пригласить на обед.
	b. Затем используйте этот список для вывода пригласительного сообщения
каждому участнику. Текст пригласительного «Привет, <имя>! Хочу
пригласить тебя на ужин в это воскресенье»
	
	2. Изменение списка гостей: вы только что узнали, что один из гостей прийти не
сможет, поэтому вам придется разослать новые приглашения. Отсутствующего
гостя нужно заменить кем-то другим.
	a. Удалите из списка одного гостя, который не сможет прийти, и выведите
текст с его именем. Пример текста: «<имя> к сожалению, прийти не
сможет».
	b. Измените список и замените имя гостя, который прийти не сможет,
именем нового приглашенного.
	c. Выведите новый набор сообщений с приглашениями – по одному для
каждого участника, входящего в список.

	3. Больше гостей: вы решили купить обеденный стол большего размера.
Дополнительные места позволяют пригласить на обед еще трех гостей.
	a. Добавьте в конец программы команду print, которая выводит сообщение о
расширении списка гостей. Пример текста: «Список гостей расширяется!»
	b. Добавьте вызов insert() для добавления одного гостя в начало списка .
	c. Добавьте вызов insert() для добавления одного гостя в середину списка .
	d. Добавьте вызов append() для добавления одного гостя в конец списка .
	e. Выведите новый набор сообщений с приглашениями – по одному для
каждого участника, входящего в список.

	4. Сокращение списка гостей: только что выяснилось, что новый обеденный стол
привезти вовремя не успеют, и места хватит только для двух гостей.
	a. Добавьте команду для вывода сообщения о том, что на обед
приглашаются всего два гостя. Пример текста: «К сожалению стол
привезти не успели! Приглашаются только 2 гостя.»
	b. Используйте len() для вывода сообщения с количеством людей,
приглашенных на обед. И выведите в окно терминала сообщение
«<количество> - это много, надо уменьшить список»
	c. Используйте метод pop() для последовательного удаления гостей из
списка до тех пор, пока в списке не останутся только два человека .
Каждый раз, когда из списка удаляется очередное имя, выведите для
этого человека сообщение о том, что вы сожалеете об отмене
приглашения.
	d. Выведите сообщение для каждого из двух человек, остающихся в списке.
Сообщение должно подтверждать, что более раннее приглашение
остается в силе.
	e. Используйте команду del для удаления двух последних имен, чтобы
список остался пустым. Выведите список, чтобы убедиться в том, что в
конце работы программы список действительно не содержит ни одного
элемента.

Домашнее задание

50б.
1) Создайте список чисел, кратных 3, в диапазоне от 3 до 30.
2) Создайте список четных чисел от 2 до 1 000 включительно.
3) Суммируйте все числа внутри списка четных чисел
4) **Кубы: результат возведения числа в третью степень называется кубом. Например, куб 2 записывается в языке Python в виде 2**3. Создайте список первых 10 кубов (то есть кубов всех целых чисел от 1 до 10) и выведите значения всех кубов в цикле for.

50б.
Задача: Поиск наименьшего числа
	Напишите программу на Python, которая запрашивает у пользователя ввод целых чисел до тех пор, пока пользователь не введет 0. После ввода 0 программа должна вывести наименьшее введенное число, не считая 0.
	Эта задача поможет вам попрактиковаться в использовании цикла while для обработки ввода пользователя и условий для обновления минимального значения.
	Примерный алгоритм решения:
 - Инициализируйте переменную для хранения наименьшего числа значением None или первым введенным значением.
 - Используйте цикл while для запрашивания чисел у пользователя.
 - Если пользователь вводит 0, завершите цикл.
 - Проверьте, является ли текущее введенное число меньше сохраненного наименьшего числа. Если да, обновите наименьшее число.
 - После выхода из цикла выведите наименьшее введенное число.
 - В этой задаче нужно продемонстрировать базовое использование цикла while, обработку условий и работу с пользовательским вводом в Python.